--- !ruby/object:RI::MethodDescription 
params: (type, &block)
is_singleton: false
block_params: 
name: add_listener
comment: 
- !ruby/struct:SM::Flow::P 
  body: 'Add a listener block for one of the available types. (Celerity only) Types
    map to HtmlUnit interfaces like this:'
- !ruby/struct:SM::Flow::VERB 
  body: "  :status           =&gt; StatusHandler\n  :alert            =&gt; AlertHandler \
    \ ( window.alert() )\n  :web_window_event =&gt; WebWindowListener\n  :html_parser \
    \     =&gt; HTMLParserListener\n  :incorrectness    =&gt; IncorrectnessListener\n\
    \  :confirm          =&gt; ConfirmHandler ( window.confirm() )\n  :prompt      \
    \     =&gt; PromptHandler ( window.prompt() )\n"
- !ruby/struct:SM::Flow::P 
  body: 'Examples:'
- !ruby/struct:SM::Flow::VERB 
  body: "  browser.add_listener(:status) { |page, message| ... }\n  browser.add_listener(:alert) \
    { |page, message| ... }\n  browser.add_listener(:web_window_event) { |web_window_event| \
    ... }\n  browser.add_listener(:html_parser) { |message, url, line, column, key| \
    ... }\n  browser.add_listener(:incorrectness) { |message, origin| ... }\n  browser.add_listener(:confirm) \
    { |page, message| ...; true }\n  browser.add_listener(:prompt) { |page, message| \
    ... }\n"
- !ruby/struct:SM::Flow::P 
  body: '@param [Symbol] type One of the above symbols. @param [Proc] block A block
    to be executed for events of this type.'
full_name: Celerity::Browser#add_listener
visibility: public
aliases: []

